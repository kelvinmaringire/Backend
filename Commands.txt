pip freeze > requirements.txt

bash

passwd

sudo apt update

sudo apt upgrade -y

sudo apt install nodejs npm -y

sudo npm install -g wscat

sudo apt install nginx redis-server supervisor git

sudo nano /etc/redis/redis.conf

supervised no (to) supervised systemd

sudo systemctl restart redis

sudo systemctl enable redis-server

sudo ufw enable

sudo ufw status

sudo ufw allow 80/tcp

sudo ufw allow 8000/tcp

sudo ufw allow 443/tcp

sudo ufw allow ssh

sudo ufw reload

point domain to VPS
https://www.youtube.com/watch?v=NM2NkMfQLWI

sudo nginx -t   #test conf

sudo service nginx start

sudo systemctl restart nginx

sudo apt install build-essential libpq-dev python3-dev python3-venv

sudo apt install postgresql postgresql-contrib postgis gdal-bin libgdal-dev postgresql-common

sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh

sudo -i -u postgres psql

ALTER USER postgres WITH PASSWORD 'talibk700';

CREATE DATABASE buybuddydb;

GRANT ALL PRIVILEGES ON DATABASE buybuddydb TO postgres;

ALTER USER postgres WITH SUPERUSER;

\q

cd /var/www

sudo git clone https://github.com/kelvinmaringire/Backend.git

cd Backend
sudo chmod -R 777 /var/www/Backend

python3 -m venv myenv

source myenv/bin/activate

sudo -u postgres psql buybuddydb < buybuddydb.sql

pip install -r requirements.txt

pip install GDAL==$(gdal-config --version)  # for geo apps

# settings.py
# GDAL_LIBRARY_PATH = 'C:/OSGeo4W/bin/gdal309.dll'  # Remove or comment this line

sudo nano /etc/systemd/system/daphne.service

##############################

[Unit]
Description=Daphne server for Django
After=network.target

[Service]
ExecStart=/var/www/Backend/myenv/bin/daphne -u /run/daphne/daphne.sock chat.asgi:application
WorkingDirectory=/var/www/Backend
User=www-data
Group=www-data
Restart=always

[Install]
WantedBy=multi-user.target


##############################

sudo systemctl daemon-reload
sudo systemctl enable daphne
sudo systemctl start daphne


pip install gunicorn

sudo nano /etc/systemd/system/gunicorn.service

#########################

[Unit]
Description=Gunicorn instance to serve your Django app
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/Backend
ExecStart=/var/www/Backend/myenv/bin/gunicorn --workers 3 --bind unix:/run/gunicorn.sock buybuddy.wsgi:application

Restart=always
RestartSec=5
KillMode=mixed
TimeoutStopSec=5

[Install]
WantedBy=multi-user.target

###########################

sudo systemctl start gunicorn

sudo systemctl enable gunicorn

sudo systemctl restart gunicorn

sudo systemctl status gunicorn

sudo systemctl daemon-reload -> If you make changes to the service file, you need to reload the systemd daemon:

mkdir static

mkdir conf

nano conf/gunicorn_config.py

command = '/var/www/Backend/myenv/bin/gunicorn'
pythonpath = '/var/www/Backend'
bind = '167.71.130.8:8000'
workers = 3

gunicorn -c conf/gunicorn_config.py buybuddy.wsgi

Ctrl Z && bg for playing in the background

nano buybuddy/wsgi.py

Change:
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "buybuddy.settings.dev")
To:
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "buybuddy.settings.production")


python manage.py collectstatic

deactivate

sudo nano /etc/nginx/sites-available/buybuddy

server {
    listen 80;
    server_name buybuddysave.co.za;

    location /static/ {
        alias /var/www/Backend/static/;
    }

    location / {
        proxy_pass http://167.71.130.8:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

cd /etc/nginx/sites-enabled/

sudo ln -s /etc/nginx/sites-available/buybuddy

sudo rm default

sudo apt install certbot python3-certbot-nginx

sudo certbot --nginx -d buybuddysave.co.za

sudo systemctl restart nginx


nano /etc/supervisor/conf.d/daphne.conf

[program:daphne]
command=/var/www/Backend/myenv/bin/daphne -u /run/daphne/daphne.sock --proxy-headers chat.asgi:application
directory=/var/www/Backend
user=www-data
autostart=true
autorestart=true
stdout_logfile=/var/log/daphne.log
redirect_stderr=true

sudo mkdir /run/daphne
sudo chown www-data:www-data /run/daphne
sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl start daphne


sudo systemctl restart redis
sudo supervisorctl restart daphne

wscat -c wss://buybuddysave.co.za/ws/chat/4


##########################
upstream gunicorn {
    server unix:/run/gunicorn.sock;
}

upstream daphne {
    server unix:/run/daphne/daphne.sock;
}

server {
    server_name buybuddysave.co.za;

    location /static/ {
        alias /var/www/Backend/static/;
    }

    location / {
        proxy_pass http://gunicorn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }  

    # WebSocket configuration
    location /ws/ {
        proxy_pass http://daphne;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/buybuddysave.co.za/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/buybuddysave.co.za/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = buybuddysave.co.za) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name buybuddysave.co.za;
    return 404; # managed by Certbot
}

####################################


